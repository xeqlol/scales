{"version":3,"sources":["utils/index.ts","components/Bridge/index.tsx","components/Frets/index.tsx","components/Neck/index.tsx","components/Select/index.tsx","components/Credentials/index.tsx","components/Notes/index.tsx","components/App/index.tsx","index.tsx"],"names":["NOTES_COLORS","NOTES","NOTES_COUNT","length","SCALES","name","pattern","TUNINGS","getLabelForNote","noteIndex","Bridge","strings","tuning","bridgeNotes","map","className","note","index","isActive","includes","key","style","color","join","Frets","slice","_","fretIndex","stringIndex","Neck","Select","value","onChange","items","label","event","target","Credentials","href","Notes","scale","root","shiftedScale","console","log","useScaleState","createPersistedState","useRootState","useFretsCountState","useTuningCountState","SCALES_SELECT_ITEMS","NOTES_SELECT_ITEMS","FRETS_SELECT_ITEMS","fretCount","TUNINGS_SELECT_ITEMS","App","setScale","setRoot","fretsCount","setFretsCount","setTuning","scalePattern","tuningPatter","startNote","notes","filterNotesByScale","push","getNotesForFrets","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0c00773.chunk.js","sourcesContent":["export const NOTES_COLORS = [\n  \"#e74c3c\", // C\n  \"#c0392b\", // C#\n  \"#e67e22\", // D\n  \"#d35400\", // D#\n  \"#fecd04\", // E\n  \"#2fcc71\", // F\n  \"#3498db\", // F#\n  \"#2980b9\", // G\n  \"#745ec5\", // G#\n  \"#95a5a6\", // A\n  \"#ef717a\", // A#\n  \"#d45c9e\", // B\n];\n\nexport const NOTES = [\n  \"C\", //   0\n  \"C#\", //  1\n  \"D\", //   2\n  \"D#\", //  3\n  \"E\", //   4\n  \"F\", //   5\n  \"F#\", //  6\n  \"G\", //   7\n  \"G#\", //  8\n  \"A\", //   9\n  \"A#\", //  10\n  \"B\", //   11\n];\n\nexport const NOTES_COUNT = NOTES.length;\n\nexport const SCALES = [\n  {\n    name: \"Minor\",\n    pattern: [0, 2, 3, 5, 7, 8, 10],\n  },\n  {\n    name: \"Harmonic minor\",\n    pattern: [0, 2, 3, 5, 7, 8, 11],\n  },\n  {\n    name: \"Melodic minor\",\n    pattern: [0, 2, 4, 6, 8, 9, 11],\n  },\n  {\n    name: \"Major\",\n    pattern: [0, 2, 4, 5, 7, 9, 11],\n  },\n  {\n    name: \"Harmonic major\",\n    pattern: [0, 2, 4, 5, 7, 8, 11],\n  },\n  {\n    name: \"Melodic major\",\n    pattern: [0, 2, 4, 5, 7, 8, 10],\n  },\n  {\n    name: \"Diminished\",\n    pattern: [0, 2, 3, 5, 6, 8, 9, 11],\n  },\n  {\n    name: \"Minor arpeggio\",\n    pattern: [0, 3, 7],\n  },\n  {\n    name: \"Minor 7th arpeggio\",\n    pattern: [0, 3, 7, 10],\n  },\n];\n\nexport const TUNINGS = [\n  {\n    name: \"Standard E\",\n    pattern: [4, 11, 7, 2, 9, 4],\n  },\n  {\n    name: \"Drop D\",\n    pattern: [4, 11, 7, 2, 9, 2],\n  },\n  {\n    name: \"Drop C#\",\n    pattern: [3, 10, 6, 1, 8, 1],\n  },\n  {\n    name: \"Drop C\",\n    pattern: [2, 9, 5, 0, 7, 0],\n  },\n  {\n    name: \"Drop A\",\n    pattern: [4, 11, 7, 2, 9, 4, 9],\n  },\n];\n\nexport const FRETS_COUNTS = [12, 18, 22, 24];\n\nexport const getLabelForNote = (noteIndex: number) => {\n  return NOTES[noteIndex];\n};\n\nexport const filterNotesByScale = (notes: number[], scalePattern: number[]) => {\n  return notes.map((note) => (scalePattern.includes(note) ? note : null));\n};\n\nexport const getNotesForFrets = (startNote: number, fretsCount: number) => {\n  const notes = [];\n\n  for (let index = 0; index < fretsCount + 1; index++) {\n    notes.push((index + startNote) % NOTES_COUNT);\n  }\n\n  return notes;\n};\n","import React from \"react\";\n\nimport { getLabelForNote, NOTES_COLORS } from \"../../utils\";\n\nimport \"./styles.css\";\n\nexport const Bridge: React.FC<{\n  strings: (number | null)[][];\n  tuning: number[];\n}> = ({ strings, tuning }) => {\n  const bridgeNotes = strings.map(([note]) => note);\n\n  return (\n    <div className={\"bridge\"}>\n      {tuning.map((note, index) => {\n        const isActive = bridgeNotes.includes(note);\n\n        return (\n          <div className={\"bridge-note\"} key={index}>\n            <div\n              style={isActive ? { color: NOTES_COLORS[note] } : {}}\n              className={[\"bridge-label\", isActive ? \"active\" : \"\"].join(\" \")}\n            >\n              {getLabelForNote(note)}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { getLabelForNote, NOTES_COLORS } from \"../../utils\";\n\nimport \"./styles.css\";\n\nexport const Frets: React.FC<{ strings: (number | null)[][] }> = ({\n  strings,\n}) => (\n  <>\n    {strings[0].slice(1).map((_, fretIndex) => (\n      <div className={\"fret\"} key={fretIndex}>\n        <div className={\"fret-index\"}>{fretIndex + 1}</div>\n        <div className={\"fret-notes\"}>\n          {strings.map((_, stringIndex) => {\n            const note = strings[stringIndex][fretIndex + 1];\n\n            return (\n              <div className={\"note\"} key={stringIndex}>\n                {note !== null ? (\n                  <div\n                    className={\"label\"}\n                    style={{ color: NOTES_COLORS[note] }}\n                  >\n                    {getLabelForNote(note)}\n                  </div>\n                ) : null}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    ))}\n  </>\n);\n","import React from \"react\";\n\nimport { Bridge } from \"../Bridge\";\nimport { Frets } from \"../Frets\";\n\nimport \"./styles.css\";\n\nexport const Neck: React.FC<{\n  strings: (number | null)[][];\n  tuning: number[];\n}> = ({ strings, tuning }) => (\n  <div className={\"frets\"}>\n    <Bridge strings={strings} tuning={tuning} />\n    <Frets strings={strings} />\n  </div>\n);\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport const Select: React.FC<{\n  label: string;\n  value: number;\n  items: { name: string | number; value: any }[];\n  onChange: (value: string) => void;\n}> = ({ value, onChange, items, label }) => (\n  <div className={\"select-container\"}>\n    <div className={\"select-label\"}>{label}</div>\n    <div className={\"select\"}>\n      <select value={value} onChange={event => onChange(event.target.value)}>\n        {items.map(({ name, value }, index) => (\n          <option value={value} key={index}>\n            {name}\n          </option>\n        ))}\n      </select>\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport const Credentials: React.FC = () => {\n  return (\n    <div className=\"credential-container\">\n      made for fun\n      <div className=\"credential-links\">\n        <a href=\"https://twitter.com/xeqlol\">twitter</a>\n        <a href=\"http://github.com/xeqlol\">github</a>\n        <a href=\"https://t.me/xeqlol\">telegram</a>\n        <a href=\"mailto:xeqlol@gmail.com\">email</a>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./styles.css\";\nimport { NOTES, NOTES_COLORS, NOTES_COUNT } from \"../../utils\";\n\nexport const Notes: React.FC<{ scale: number[]; root: number }> = ({\n  scale,\n  root,\n}) => {\n  const shiftedScale = scale.map((note) => (note + root) % NOTES_COUNT);\n  return (\n    <div className={\"notes-container\"}>\n      <div className={\"notes-title\"}>Intervals: </div>\n      <div className={\"notes\"}>\n        {NOTES.map((note, index) => {\n          console.log(\n            index,\n            root,\n\n            shiftedScale\n          );\n          const isActive = shiftedScale.includes(index);\n\n          return (\n            <div\n              className={\"notes-note\"}\n              style={isActive ? { color: NOTES_COLORS[index] } : {}}\n            >\n              {note}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport createPersistedState from \"use-persisted-state\";\n\nimport { Neck } from \"../Neck\";\nimport { Select } from \"../Select\";\nimport { Credentials } from \"../Credentials\";\n\nimport {\n  NOTES_COUNT,\n  SCALES,\n  filterNotesByScale,\n  getNotesForFrets,\n  NOTES,\n  FRETS_COUNTS,\n  TUNINGS,\n} from \"../../utils\";\n\nimport \"./App.css\";\nimport { Notes } from \"../Notes\";\n\nconst useScaleState = createPersistedState(\"scale\");\nconst useRootState = createPersistedState(\"root\");\nconst useFretsCountState = createPersistedState(\"frets-count\");\nconst useTuningCountState = createPersistedState(\"tuning\");\n\nconst SCALES_SELECT_ITEMS = SCALES.map(({ name }, index) => ({\n  name,\n  value: index,\n}));\nconst NOTES_SELECT_ITEMS = NOTES.map((note, index) => ({\n  name: note,\n  value: index,\n}));\nconst FRETS_SELECT_ITEMS = FRETS_COUNTS.map((fretCount) => ({\n  name: fretCount,\n  value: fretCount,\n}));\nconst TUNINGS_SELECT_ITEMS = TUNINGS.map(({ name }, index) => ({\n  name,\n  value: index,\n}));\n\nconst App = () => {\n  const [scale, setScale] = useScaleState(0);\n  const [root, setRoot] = useRootState(0);\n  const [fretsCount, setFretsCount] = useFretsCountState(22);\n  const [tuning, setTuning] = useTuningCountState(0);\n\n  const { pattern: scalePattern } = SCALES[scale];\n  const { pattern: tuningPatter } = TUNINGS[tuning];\n\n  const strings = tuningPatter.map((startNote) =>\n    filterNotesByScale(\n      getNotesForFrets(startNote, fretsCount),\n      scalePattern.map((note) => (note + root) % NOTES_COUNT)\n    )\n  );\n\n  return (\n    <>\n      <div className={\"controls\"}>\n        <Select\n          label={\"Scale\"}\n          items={SCALES_SELECT_ITEMS}\n          value={scale}\n          onChange={(value) => setScale(Number(value))}\n        />\n        <Select\n          label={\"Root note\"}\n          items={NOTES_SELECT_ITEMS}\n          value={root}\n          onChange={(value) => setRoot(Number(value))}\n        />\n        <Select\n          label={\"Frets count\"}\n          items={FRETS_SELECT_ITEMS}\n          value={fretsCount}\n          onChange={(value) => setFretsCount(Number(value))}\n        />\n        <Select\n          label={\"Tuning\"}\n          items={TUNINGS_SELECT_ITEMS}\n          value={tuning}\n          onChange={(value) => setTuning(Number(value))}\n        />\n      </div>\n\n      <Neck strings={strings} tuning={tuningPatter} />\n      <Notes scale={SCALES[scale].pattern} root={root} />\n      <Credentials />\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}