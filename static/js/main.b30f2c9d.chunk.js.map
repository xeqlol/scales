{"version":3,"sources":["utils/index.ts","components/Bridge/index.tsx","components/Frets/index.tsx","components/Neck/index.tsx","components/Select/index.tsx","components/Credentials/index.tsx","components/Notes/index.tsx","components/App/index.tsx","index.tsx"],"names":["NOTES_COLORS","NOTES","NOTES_COUNT","length","SCALES","name","pattern","TUNINGS","MODES","shift","getLabelForNote","noteIndex","getNotesForScale","root","scale","notes","index","nextNote","push","rotateArray","array","newArray","Math","floor","apply","splice","applyModeToScale","mode","console","log","Bridge","strings","tuning","bridgeNotes","map","className","note","isActive","includes","key","style","color","join","Frets","slice","_","fretIndex","stringIndex","Neck","Select","value","onChange","items","label","event","target","Credentials","href","Notes","shiftedScale","useScaleState","createPersistedState","useRootState","useModeState","useFretsCountState","useTuningCountState","SCALES_SELECT_ITEMS","NOTES_SELECT_ITEMS","FRETS_SELECT_ITEMS","fretCount","TUNINGS_SELECT_ITEMS","MODES_SELECT_ITEMS","App","setScale","setRoot","fretsCount","setFretsCount","setTuning","setMode","scalePattern","tuningPatter","modeShift","startNote","fretsNotes","getNotesForFrets","moddedScale","scaleNotes","filterNotesByScale","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b30f2c9d.chunk.js","sourcesContent":["export const NOTES_COLORS = [\n  \"#e74c3c\", // C\n  \"#c0392b\", // C#\n  \"#e67e22\", // D\n  \"#d35400\", // D#\n  \"#fecd04\", // E\n  \"#2fcc71\", // F\n  \"#3498db\", // F#\n  \"#2980b9\", // G\n  \"#745ec5\", // G#\n  \"#95a5a6\", // A\n  \"#ef717a\", // A#\n  \"#d45c9e\", // B\n];\n\nexport const NOTES = [\n  \"C\", //   0\n  \"C#\", //  1\n  \"D\", //   2\n  \"D#\", //  3\n  \"E\", //   4\n  \"F\", //   5\n  \"F#\", //  6\n  \"G\", //   7\n  \"G#\", //  8\n  \"A\", //   9\n  \"A#\", //  10\n  \"B\", //   11\n];\n\nexport const NOTES_COUNT = NOTES.length;\n\nexport const SCALES = [\n  {\n    name: \"Lydian dominant\",\n    pattern: [2, 2, 2, 1, 2, 1, 2],\n  },\n  {\n    name: \"Minor\",\n    pattern: [2, 1, 2, 2, 1, 2, 2],\n  },\n  {\n    name: \"Harmonic minor\",\n    pattern: [2, 1, 2, 2, 1, 3, 1],\n  },\n  {\n    name: \"Melodic minor\",\n    pattern: [2, 2, 2, 2, 1, 2, 1],\n  },\n  {\n    name: \"Major\",\n    pattern: [2, 2, 1, 2, 2, 2, 1],\n  },\n  {\n    name: \"Harmonic major\",\n    pattern: [2, 2, 1, 2, 1, 3, 1],\n  },\n  {\n    name: \"Melodic major\",\n    pattern: [2, 2, 1, 2, 1, 2, 2],\n  },\n  {\n    name: \"Diminished\",\n    pattern: [2, 1, 2, 1, 2, 1, 2, 1],\n  },\n  {\n    name: \"Minor arpeggio\",\n    pattern: [3, 4, 8],\n  },\n  {\n    name: \"Minor 7th arpeggio\",\n    pattern: [3, 4, 3, 2],\n  },\n];\n\nexport const TUNINGS = [\n  {\n    name: \"Standard E\",\n    pattern: [4, 11, 7, 2, 9, 4],\n  },\n  {\n    name: \"Standard C\",\n    pattern: [0, 7, 3, 10, 5, 0],\n  },\n  {\n    name: \"Drop D\",\n    pattern: [4, 11, 7, 2, 9, 2],\n  },\n  {\n    name: \"Drop C#\",\n    pattern: [3, 10, 6, 1, 8, 1],\n  },\n  {\n    name: \"Drop C\",\n    pattern: [2, 9, 5, 0, 7, 0],\n  },\n  {\n    name: \"Drop A\",\n    pattern: [4, 11, 7, 2, 9, 4, 9],\n  },\n];\n\nexport const FRETS_COUNTS = [12, 18, 22, 24];\n\nexport const MODES = [\n  {\n    name: \"Ionian\",\n    shift: 0,\n  },\n  {\n    name: \"Dorian\",\n    shift: 1,\n  },\n  {\n    name: \"Phrygian\",\n    shift: 2,\n  },\n  {\n    name: \"Lydian\",\n    shift: 3,\n  },\n  {\n    name: \"Mixolydian\",\n    shift: 4,\n  },\n  {\n    name: \"Aeolian\",\n    shift: 5,\n  },\n  {\n    name: \"Locrian\",\n    shift: 6,\n  },\n];\n\nexport const getLabelForNote = (noteIndex: number) => {\n  return NOTES[noteIndex];\n};\n\nexport const filterNotesByScale = (notes: number[], scaleNotes: number[]) => {\n  return notes.map((note) => (scaleNotes.includes(note) ? note : null));\n};\n\nexport const getNotesForFrets = (startNote: number, fretsCount: number) => {\n  const notes = [];\n\n  for (let index = 0; index < fretsCount + 1; index++) {\n    notes.push((index + startNote) % NOTES_COUNT);\n  }\n\n  return notes;\n};\n\nexport const getNotesForScale = (root: number, scale: number[]) => {\n  const notes = [root];\n\n  for (let index = 0; index < scale.length; index++) {\n    const nextNote = (notes[notes.length - 1] + scale[index]) % NOTES_COUNT;\n\n    notes.push(nextNote);\n  }\n\n  return notes;\n};\n\nconst rotateArray = <T extends any[]>(array: T, shift: number) => {\n  const newArray = [...array];\n\n  shift -= newArray.length * Math.floor(shift / newArray.length);\n  newArray.push.apply(newArray, newArray.splice(0, shift));\n\n  return newArray;\n};\n\nexport const applyModeToScale = (mode: number, scale: number[]) => {\n  console.log(scale, mode, rotateArray(scale, mode));\n  return rotateArray(scale, mode);\n};\n","import React from \"react\";\n\nimport { getLabelForNote, NOTES_COLORS } from \"../../utils\";\n\nimport \"./styles.css\";\n\nexport const Bridge: React.FC<{\n  strings: (number | null)[][];\n  tuning: number[];\n}> = ({ strings, tuning }) => {\n  const bridgeNotes = strings.map(([note]) => note);\n\n  return (\n    <div className={\"bridge\"}>\n      {tuning.map((note, index) => {\n        const isActive = bridgeNotes.includes(note);\n\n        return (\n          <div className={\"bridge-note\"} key={index}>\n            <div\n              style={isActive ? { color: NOTES_COLORS[note] } : {}}\n              className={[\"bridge-label\", isActive ? \"active\" : \"\"].join(\" \")}\n            >\n              {getLabelForNote(note)}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { getLabelForNote, NOTES_COLORS } from \"../../utils\";\n\nimport \"./styles.css\";\n\nexport const Frets: React.FC<{ strings: (number | null)[][] }> = ({\n  strings,\n}) => (\n  <>\n    {strings[0].slice(1).map((_, fretIndex) => (\n      <div className={\"fret\"} key={fretIndex}>\n        <div className={\"fret-index\"}>{fretIndex + 1}</div>\n        <div className={\"fret-notes\"}>\n          {strings.map((_, stringIndex) => {\n            const note = strings[stringIndex][fretIndex + 1];\n\n            return (\n              <div className={\"note\"} key={stringIndex}>\n                {note !== null ? (\n                  <div\n                    className={\"label\"}\n                    style={{ color: NOTES_COLORS[note] }}\n                  >\n                    {getLabelForNote(note)}\n                  </div>\n                ) : null}\n              </div>\n            );\n          })}\n        </div>\n        <div className={\"fret-index\"}>{fretIndex + 1}</div>\n      </div>\n    ))}\n  </>\n);\n","import React from \"react\";\n\nimport { Bridge } from \"../Bridge\";\nimport { Frets } from \"../Frets\";\n\nimport \"./styles.css\";\n\nexport const Neck: React.FC<{\n  strings: (number | null)[][];\n  tuning: number[];\n}> = ({ strings, tuning }) => (\n  <div className={\"frets\"}>\n    <Bridge strings={strings} tuning={tuning} />\n    <Frets strings={strings} />\n  </div>\n);\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport const Select: React.FC<{\n  label: string;\n  value: number;\n  items: { name: string | number; value: any }[];\n  onChange: (value: string) => void;\n}> = ({ value, onChange, items, label }) => (\n  <div className={\"select-container\"}>\n    <div className={\"select-label\"}>{label}</div>\n    <div className={\"select\"}>\n      <select value={value} onChange={event => onChange(event.target.value)}>\n        {items.map(({ name, value }, index) => (\n          <option value={value} key={index}>\n            {name}\n          </option>\n        ))}\n      </select>\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport const Credentials: React.FC = () => {\n  return (\n    <div className=\"credential-container\">\n      made for fun\n      <div className=\"credential-links\">\n        <a href=\"https://twitter.com/xeqlol\">twitter</a>\n        <a href=\"http://github.com/xeqlol\">github</a>\n        <a href=\"https://t.me/xeqlol\">telegram</a>\n        <a href=\"mailto:xeqlol@gmail.com\">email</a>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./styles.css\";\nimport {\n  applyModeToScale,\n  getNotesForScale,\n  NOTES,\n  NOTES_COLORS,\n} from \"../../utils\";\n\nexport const Notes: React.FC<{ scale: number[]; root: number; mode: number }> =\n  ({ scale, root, mode }) => {\n    const shiftedScale = getNotesForScale(root, applyModeToScale(mode, scale));\n    return (\n      <div className={\"notes-container\"}>\n        <div className={\"notes-title\"}>Intervals: </div>\n        <div className={\"notes\"}>\n          {NOTES.map((note, index) => {\n            const isActive = shiftedScale.includes(index);\n\n            return (\n              <div\n                className={\"notes-note\"}\n                style={isActive ? { color: NOTES_COLORS[index] } : {}}\n              >\n                {note}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n","import React from \"react\";\nimport createPersistedState from \"use-persisted-state\";\n\nimport { Neck } from \"../Neck\";\nimport { Select } from \"../Select\";\nimport { Credentials } from \"../Credentials\";\n\nimport {\n  SCALES,\n  filterNotesByScale,\n  getNotesForFrets,\n  NOTES,\n  FRETS_COUNTS,\n  TUNINGS,\n  getNotesForScale,\n  MODES,\n  applyModeToScale,\n} from \"../../utils\";\n\nimport \"./App.css\";\nimport { Notes } from \"../Notes\";\n\nconst useScaleState = createPersistedState(\"scale\");\nconst useRootState = createPersistedState(\"root\");\nconst useModeState = createPersistedState(\"mode\");\nconst useFretsCountState = createPersistedState(\"frets-count\");\nconst useTuningCountState = createPersistedState(\"tuning\");\n\nconst SCALES_SELECT_ITEMS = SCALES.map(({ name }, index) => ({\n  name,\n  value: index,\n}));\nconst NOTES_SELECT_ITEMS = NOTES.map((note, index) => ({\n  name: note,\n  value: index,\n}));\nconst FRETS_SELECT_ITEMS = FRETS_COUNTS.map((fretCount) => ({\n  name: fretCount,\n  value: fretCount,\n}));\nconst TUNINGS_SELECT_ITEMS = TUNINGS.map(({ name }, index) => ({\n  name,\n  value: index,\n}));\nconst MODES_SELECT_ITEMS = MODES.map(({ name }, index) => ({\n  name,\n  value: index,\n}));\n\nconst App = () => {\n  const [scale, setScale] = useScaleState(0);\n  const [root, setRoot] = useRootState(0);\n  const [fretsCount, setFretsCount] = useFretsCountState(22);\n  const [tuning, setTuning] = useTuningCountState(0);\n  const [mode, setMode] = useModeState(0);\n\n  const { pattern: scalePattern } = SCALES[scale];\n  const { pattern: tuningPatter } = TUNINGS[tuning];\n  const { shift: modeShift } = MODES[mode];\n\n  const strings = tuningPatter.map((startNote) => {\n    const fretsNotes = getNotesForFrets(startNote, fretsCount);\n    const moddedScale = applyModeToScale(modeShift, scalePattern);\n    const scaleNotes = getNotesForScale(root, moddedScale);\n    const stringNotes = filterNotesByScale(fretsNotes, scaleNotes);\n\n    return stringNotes;\n  });\n\n  return (\n    <>\n      <div className={\"controls\"}>\n        <Select\n          label={\"Scale\"}\n          items={SCALES_SELECT_ITEMS}\n          value={scale}\n          onChange={(value) => setScale(Number(value))}\n        />\n        <Select\n          label={\"Root note\"}\n          items={NOTES_SELECT_ITEMS}\n          value={root}\n          onChange={(value) => setRoot(Number(value))}\n        />\n        <Select\n          label={\"Mode\"}\n          items={MODES_SELECT_ITEMS}\n          value={mode}\n          onChange={(value) => setMode(Number(value))}\n        />\n        <Select\n          label={\"Frets count\"}\n          items={FRETS_SELECT_ITEMS}\n          value={fretsCount}\n          onChange={(value) => setFretsCount(Number(value))}\n        />\n        <Select\n          label={\"Tuning\"}\n          items={TUNINGS_SELECT_ITEMS}\n          value={tuning}\n          onChange={(value) => setTuning(Number(value))}\n        />\n      </div>\n\n      <Neck strings={strings} tuning={tuningPatter} />\n      <Notes scale={SCALES[scale].pattern} root={root} mode={modeShift} />\n      <Credentials />\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}