{"version":3,"sources":["utils/index.ts","components/Bridge/index.tsx","components/Frets/index.tsx","components/Neck/index.tsx","components/Select/index.tsx","components/Credentials/index.tsx","components/App/index.tsx","index.tsx"],"names":["THEMES","NOTES","NOTES_COUNT","length","SCALES","name","pattern","TUNINGS","getLabelForNote","noteIndex","Bridge","strings","tuning","bridgeNotes","map","className","note","index","key","includes","join","Frets","slice","_","fretIndex","stringIndex","Neck","Select","value","onChange","items","label","event","target","Credentials","href","useScaleState","createPersistedState","useRootState","useFretsCountState","useTuningCountState","useThemeState","SCALES_SELECT_ITEMS","NOTES_SELECT_ITEMS","FRETS_SELECT_ITEMS","fretCount","TUNINGS_SELECT_ITEMS","THEME_SELECT_ITEMS","App","scale","setScale","root","setRoot","fretsCount","setFretsCount","setTuning","theme","setTheme","scalePattern","tuningPatter","startNote","notes","filterNotesByScale","push","getNotesForFrets","useEffect","document","body","Math","floor","random","Number","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c212c187.chunk.js","sourcesContent":["export const THEMES = [\r\n  \"torquoise\",\r\n  \"emerald\",\r\n  \"peter-river\",\r\n  \"carrot\",\r\n  \"alizarin\",\r\n  \"amethyst\",\r\n  \"sun-flower\",\r\n  \"white\",\r\n];\r\n\r\nexport const NOTES = [\r\n  \"C\", //   0\r\n  \"C#\", //  1\r\n  \"D\", //   2\r\n  \"D#\", //  3\r\n  \"E\", //   4\r\n  \"F\", //   5\r\n  \"F#\", //  6\r\n  \"G\", //   7\r\n  \"G#\", //  8\r\n  \"A\", //   9\r\n  \"A#\", //  10\r\n  \"B\", //   11\r\n  \"B#\", //   12\r\n];\r\n\r\nexport const NOTES_COUNT = NOTES.length;\r\n\r\nexport const SCALES = [\r\n  {\r\n    name: \"Minor\",\r\n    pattern: [0, 2, 3, 5, 7, 8, 10],\r\n  },\r\n  {\r\n    name: \"Harmonic minor\",\r\n    pattern: [0, 2, 3, 5, 7, 8, 11],\r\n  },\r\n  {\r\n    name: \"Melodic minor\",\r\n    pattern: [0, 2, 4, 6, 8, 9, 11],\r\n  },\r\n  {\r\n    name: \"Major\",\r\n    pattern: [0, 2, 4, 5, 7, 9, 11],\r\n  },\r\n  {\r\n    name: \"Harmonic major\",\r\n    pattern: [0, 2, 4, 5, 7, 8, 11],\r\n  },\r\n  {\r\n    name: \"Melodic major\",\r\n    pattern: [0, 2, 4, 5, 7, 8, 10],\r\n  },\r\n  {\r\n    name: \"Diminished\",\r\n    pattern: [0, 2, 3, 5, 6, 8, 9, 11],\r\n  },\r\n  {\r\n    name: \"Minor arpeggio\",\r\n    pattern: [0, 3, 7],\r\n  },\r\n  {\r\n    name: \"Minor 7th arpeggio\",\r\n    pattern: [0, 3, 7, 10],\r\n  },\r\n];\r\n\r\nexport const TUNINGS = [\r\n  {\r\n    name: \"Standard E\",\r\n    pattern: [4, 11, 7, 2, 9, 4],\r\n  },\r\n  {\r\n    name: \"Drop D\",\r\n    pattern: [4, 11, 7, 2, 9, 2],\r\n  },\r\n  {\r\n    name: \"Drop C#\",\r\n    pattern: [3, 10, 6, 1, 8, 1],\r\n  },\r\n  {\r\n    name: \"Drop C\",\r\n    pattern: [2, 9, 5, 0, 7, 0],\r\n  },\r\n  {\r\n    name: \"Drop A\",\r\n    pattern: [4, 11, 7, 2, 9, 4, 9],\r\n  },\r\n];\r\n\r\nexport const FRETS_COUNTS = [12, 18, 22, 24];\r\n\r\nexport const getLabelForNote = (noteIndex: number) => {\r\n  return NOTES[noteIndex];\r\n};\r\n\r\nexport const filterNotesByScale = (notes: number[], scalePattern: number[]) => {\r\n  return notes.map((note) => (scalePattern.includes(note) ? note : null));\r\n};\r\n\r\nexport const getNotesForFrets = (startNote: number, fretsCount: number) => {\r\n  const notes = [];\r\n\r\n  for (let index = 0; index < fretsCount + 1; index++) {\r\n    notes.push((index + startNote) % (NOTES_COUNT - 1));\r\n  }\r\n\r\n  return notes;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { getLabelForNote } from \"../../utils\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport const Bridge: React.FC<{\r\n  strings: (number | null)[][];\r\n  tuning: number[];\r\n}> = ({ strings, tuning }) => {\r\n  const bridgeNotes = strings.map(([note]) => note);\r\n\r\n  return (\r\n    <div className={\"bridge\"}>\r\n      {tuning.map((note, index) => (\r\n        <div className={\"bridge-note\"} key={index}>\r\n          <div\r\n            className={[\r\n              \"bridge-label\",\r\n              bridgeNotes.includes(note) ? \"active\" : \"\"\r\n            ].join(\" \")}\r\n          >\r\n            {getLabelForNote(note)}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { getLabelForNote } from \"../../utils\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport const Frets: React.FC<{ strings: (number | null)[][] }> = ({\r\n  strings\r\n}) => (\r\n  <>\r\n    {strings[0].slice(1).map((_, fretIndex) => (\r\n      <div className={\"fret\"} key={fretIndex}>\r\n        <div className={\"fret-index\"}>{fretIndex + 1}</div>\r\n        <div className={\"fret-notes\"}>\r\n          {strings.map((_, stringIndex) => {\r\n            const note = strings[stringIndex][fretIndex + 1];\r\n\r\n            return (\r\n              <div className={\"note\"} key={stringIndex}>\r\n                {note !== null ? (\r\n                  <div className={\"label\"}>{getLabelForNote(note)}</div>\r\n                ) : null}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Bridge } from \"../Bridge\";\r\nimport { Frets } from \"../Frets\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport const Neck: React.FC<{\r\n  strings: (number | null)[][];\r\n  tuning: number[];\r\n}> = ({ strings, tuning }) => (\r\n  <div className={\"frets\"}>\r\n    <Bridge strings={strings} tuning={tuning} />\r\n    <Frets strings={strings} />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport const Select: React.FC<{\r\n  label: string;\r\n  value: number;\r\n  items: { name: string | number; value: any }[];\r\n  onChange: (value: string) => void;\r\n}> = ({ value, onChange, items, label }) => (\r\n  <div className={\"select-container\"}>\r\n    <div className={\"select-label\"}>{label}</div>\r\n    <div className={\"select\"}>\r\n      <select value={value} onChange={event => onChange(event.target.value)}>\r\n        {items.map(({ name, value }, index) => (\r\n          <option value={value} key={index}>\r\n            {name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport const Credentials: React.FC = () => {\r\n  return (\r\n    <div className=\"credential-container\">\r\n      made for fun\r\n      <div className=\"credential-links\">\r\n        <a href=\"https://twitter.com/xeqlol\">twitter</a>\r\n        <a href=\"http://github.com/xeqlol\">github</a>\r\n        <a href=\"https://t.me/xeqlol\">telegram</a>\r\n        <a href=\"mailto:xeqlol@gmail.com\">email</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport createPersistedState from \"use-persisted-state\";\r\n\r\nimport { Neck } from \"../Neck\";\r\nimport { Select } from \"../Select\";\r\nimport { Credentials } from \"../Credentials\";\r\n\r\nimport {\r\n  NOTES_COUNT,\r\n  SCALES,\r\n  THEMES,\r\n  filterNotesByScale,\r\n  getNotesForFrets,\r\n  NOTES,\r\n  FRETS_COUNTS,\r\n  TUNINGS\r\n} from \"../../utils\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst useScaleState = createPersistedState(\"scale\");\r\nconst useRootState = createPersistedState(\"root\");\r\nconst useFretsCountState = createPersistedState(\"frets-count\");\r\nconst useTuningCountState = createPersistedState(\"tuning\");\r\nconst useThemeState = createPersistedState(\"theme\");\r\n\r\nconst SCALES_SELECT_ITEMS = SCALES.map(({ name }, index) => ({\r\n  name,\r\n  value: index\r\n}));\r\nconst NOTES_SELECT_ITEMS = NOTES.map((note, index) => ({\r\n  name: note,\r\n  value: index\r\n}));\r\nconst FRETS_SELECT_ITEMS = FRETS_COUNTS.map(fretCount => ({\r\n  name: fretCount,\r\n  value: fretCount\r\n}));\r\nconst TUNINGS_SELECT_ITEMS = TUNINGS.map(({ name }, index) => ({\r\n  name,\r\n  value: index\r\n}));\r\nconst THEME_SELECT_ITEMS = [\r\n  ...THEMES.map((name, index) => ({\r\n    name,\r\n    value: index\r\n  })),\r\n  { name: \"random\", value: THEMES.length }\r\n];\r\n\r\nconst App = () => {\r\n  const [scale, setScale] = useScaleState(0);\r\n  const [root, setRoot] = useRootState(0);\r\n  const [fretsCount, setFretsCount] = useFretsCountState(22);\r\n  const [tuning, setTuning] = useTuningCountState(0);\r\n  const [theme, setTheme] = useThemeState(0);\r\n\r\n  const { pattern: scalePattern } = SCALES[scale];\r\n  const { pattern: tuningPatter } = TUNINGS[tuning];\r\n\r\n  const strings = tuningPatter.map(startNote =>\r\n    filterNotesByScale(\r\n      getNotesForFrets(startNote, fretsCount),\r\n      scalePattern.map(note => (note + root) % (NOTES_COUNT - 1))\r\n    )\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.body.className =\r\n      theme === THEMES.length\r\n        ? THEMES[Math.floor(Math.random() * THEMES.length)]\r\n        : THEMES[theme];\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={\"controls\"}>\r\n        <Select\r\n          label={\"Scale\"}\r\n          items={SCALES_SELECT_ITEMS}\r\n          value={scale}\r\n          onChange={value => setScale(Number(value))}\r\n        />\r\n        <Select\r\n          label={\"Root note\"}\r\n          items={NOTES_SELECT_ITEMS}\r\n          value={root}\r\n          onChange={value => setRoot(Number(value))}\r\n        />\r\n        <Select\r\n          label={\"Frets count\"}\r\n          items={FRETS_SELECT_ITEMS}\r\n          value={fretsCount}\r\n          onChange={value => setFretsCount(Number(value))}\r\n        />\r\n        <Select\r\n          label={\"Tuning\"}\r\n          items={TUNINGS_SELECT_ITEMS}\r\n          value={tuning}\r\n          onChange={value => setTuning(Number(value))}\r\n        />\r\n        <Select\r\n          label={\"Color theme\"}\r\n          items={THEME_SELECT_ITEMS}\r\n          value={theme}\r\n          onChange={value => setTheme(Number(value))}\r\n        />\r\n      </div>\r\n\r\n      <Neck strings={strings} tuning={tuningPatter} />\r\n      <Credentials />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}