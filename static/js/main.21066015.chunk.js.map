{"version":3,"sources":["utils/index.ts","components/Bridge/index.tsx","components/Frets/index.tsx","components/Neck/index.tsx","components/Select/index.tsx","components/App/index.tsx","index.tsx"],"names":["NOTES","NOTES_COUNT","length","SCALES","name","pattern","getLabelForNote","noteIndex","Bridge","strings","tuning","bridgeNotes","map","className","note","index","key","includes","join","Frets","slice","_","fretIndex","stringIndex","Neck","Select","value","onChange","items","label","event","target","useScaleState","createPersistedState","useRootState","useFretsCountState","TUNING","SCALES_SELECT_ITEMS","NOTES_SELECT_ITEMS","FRETS_SELECT_ITEMS","fretCount","App","scale","setScale","root","setRoot","fretsCount","setFretsCount","startNote","notes","scalePattern","filterNotesByScale","push","getNotesForFrets","Number","themes","document","body","classList","add","Math","floor","random","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.21066015.chunk.js","sourcesContent":["export const NOTES = [\n  \"C\",\n  \"C#\",\n  \"D\",\n  \"D#\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"G\",\n  \"G#\",\n  \"A\",\n  \"A#\",\n  \"B\",\n  \"B#\"\n];\n\nexport const NOTES_COUNT = NOTES.length;\n\nconst C_HARMONIC_MINOR = [0, 2, 3, 5, 7, 8, 11];\nconst C_MINOR = [0, 2, 3, 5, 7, 8, 10];\n\nexport const SCALES = [\n  {\n    name: \"Minor\",\n    pattern: C_MINOR\n  },\n  {\n    name: \"Harmonic minor\",\n    pattern: C_HARMONIC_MINOR\n  }\n];\n\nexport const FRETS_COUNTS = [12, 18, 22, 24];\n\nexport const getLabelForNote = (noteIndex: number) => {\n  return NOTES[noteIndex];\n};\n\nexport const filterNotesByScale = (notes: number[], scalePattern: number[]) => {\n  return notes.map(note => (scalePattern.includes(note) ? note : null));\n};\n\nexport const getNotesForFrets = (startNote: number, fretsCount: number) => {\n  const notes = [];\n\n  for (let index = 0; index < fretsCount + 1; index++) {\n    notes.push((index + startNote) % (NOTES_COUNT - 1));\n  }\n\n  return notes;\n};\n","import React from \"react\";\n\nimport { getLabelForNote } from \"../../utils\";\n\nimport \"./styles.css\";\n\nexport const Bridge: React.FC<{\n  strings: (number | null)[][];\n  tuning: number[];\n}> = ({ strings, tuning }) => {\n  const bridgeNotes = strings.map(([note]) => note);\n\n  return (\n    <div className={\"bridge\"}>\n      {tuning.map((note, index) => (\n        <div className={\"bridge-note\"} key={index}>\n          <div\n            className={[\n              \"bridge-label\",\n              bridgeNotes.includes(note) ? \"active\" : \"\"\n            ].join(\" \")}\n          >\n            {getLabelForNote(note)}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { getLabelForNote } from \"../../utils\";\n\nimport \"./styles.css\";\n\nexport const Frets: React.FC<{ strings: (number | null)[][] }> = ({\n  strings\n}) => (\n  <>\n    {strings[0].slice(1).map((_, fretIndex) => (\n      <div className={\"fret\"} key={fretIndex}>\n        <div className={\"fret-index\"}>{fretIndex + 1}</div>\n        <div className={\"fret-notes\"}>\n          {strings.map((_, stringIndex) => {\n            const note = strings[stringIndex][fretIndex + 1];\n\n            return (\n              <div className={\"note\"} key={stringIndex}>\n                {note !== null ? (\n                  <div className={\"label\"}>{getLabelForNote(note)}</div>\n                ) : null}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    ))}\n  </>\n);\n","import React from \"react\";\n\nimport { Bridge } from \"../Bridge\";\nimport { Frets } from \"../Frets\";\n\nimport \"./styles.css\";\n\nexport const Neck: React.FC<{\n  strings: (number | null)[][];\n  tuning: number[];\n}> = ({ strings, tuning }) => (\n  <div className={\"frets\"}>\n    <Bridge strings={strings} tuning={tuning} />\n    <Frets strings={strings} />\n  </div>\n);\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport const Select: React.FC<{\n  label: string;\n  value: number;\n  items: { name: string | number; value: any }[];\n  onChange: (value: string) => void;\n}> = ({ value, onChange, items, label }) => (\n  <div className={\"select-container\"}>\n    <div className={\"select-label\"}>{label}</div>\n    <div className={\"select\"}>\n      <select value={value} onChange={event => onChange(event.target.value)}>\n        {items.map(({ name, value }, index) => (\n          <option value={value} key={index}>\n            {name}\n          </option>\n        ))}\n      </select>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport createPersistedState from \"use-persisted-state\";\n\nimport {\n  NOTES_COUNT,\n  SCALES,\n  filterNotesByScale,\n  getNotesForFrets,\n  NOTES,\n  FRETS_COUNTS\n} from \"../../utils\";\n\nimport { Neck } from \"../Neck\";\nimport { Select } from \"../Select\";\n\nimport \"./App.css\";\n\nconst useScaleState = createPersistedState(\"scale\");\nconst useRootState = createPersistedState(\"root\");\nconst useFretsCountState = createPersistedState(\"frets-count\");\n\nconst TUNING = [4, 11, 7, 2, 9, 4]; // TODO: make selector for tuning\nconst SCALES_SELECT_ITEMS = SCALES.map(({ name }, index) => ({\n  name,\n  value: index\n}));\nconst NOTES_SELECT_ITEMS = NOTES.map((note, index) => ({\n  name: note,\n  value: index\n}));\nconst FRETS_SELECT_ITEMS = FRETS_COUNTS.map(fretCount => ({\n  name: fretCount,\n  value: fretCount\n}));\n\nconst App = () => {\n  const [scale, setScale] = useScaleState(0);\n  const [root, setRoot] = useRootState(0);\n  const [fretsCount, setFretsCount] = useFretsCountState(22);\n\n  const { pattern } = SCALES[scale];\n\n  const strings = TUNING.map(startNote =>\n    filterNotesByScale(\n      getNotesForFrets(startNote, fretsCount),\n      pattern.map(note => (note + root) % (NOTES_COUNT - 1))\n    )\n  );\n\n  return (\n    <>\n      <div className={\"controls\"}>\n        <Select\n          label={\"Scale\"}\n          items={SCALES_SELECT_ITEMS}\n          value={scale}\n          onChange={value => setScale(Number(value))}\n        />\n        <Select\n          label={\"Root note\"}\n          items={NOTES_SELECT_ITEMS}\n          value={root}\n          onChange={value => setRoot(Number(value))}\n        />\n        <Select\n          label={\"Frets count\"}\n          items={FRETS_SELECT_ITEMS}\n          value={fretsCount}\n          onChange={value => setFretsCount(Number(value))}\n        />\n      </div>\n\n      <Neck strings={strings} tuning={TUNING} />\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"./index.css\";\n\nconst themes = [\n  \"torquoise\",\n  \"emerald\",\n  \"peter-river\",\n  \"carrot\",\n  \"alizarin\",\n  \"amethyst\",\n  \"sun-flower\"\n];\ndocument.body.classList.add(themes[Math.floor(Math.random() * themes.length)]);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}