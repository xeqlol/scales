{"version":3,"sources":["utils/index.ts","components/Bridge/index.tsx","components/Frets/index.tsx","components/Neck/index.tsx","components/Select/index.tsx","components/Credentials/index.tsx","components/App/index.tsx","index.tsx"],"names":["THEMES","NOTES","NOTES_COUNT","length","SCALES","name","pattern","TUNINGS","getLabelForNote","noteIndex","Bridge","strings","tuning","bridgeNotes","map","className","note","index","key","includes","join","Frets","slice","_","fretIndex","stringIndex","Neck","Select","value","onChange","items","label","event","target","Credentials","href","useScaleState","createPersistedState","useRootState","useFretsCountState","useTuningCountState","useThemeState","SCALES_SELECT_ITEMS","NOTES_SELECT_ITEMS","FRETS_SELECT_ITEMS","fretCount","TUNINGS_SELECT_ITEMS","THEME_SELECT_ITEMS","App","scale","setScale","root","setRoot","fretsCount","setFretsCount","setTuning","theme","setTheme","scalePattern","tuningPatter","startNote","notes","filterNotesByScale","push","getNotesForFrets","useEffect","document","body","Math","floor","random","Number","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5de96d8a.chunk.js","sourcesContent":["export const THEMES = [\n  \"torquoise\",\n  \"emerald\",\n  \"peter-river\",\n  \"carrot\",\n  \"alizarin\",\n  \"amethyst\",\n  \"sun-flower\",\n  \"white\"\n];\n\nexport const NOTES = [\n  \"C\", //   0\n  \"C#\", //  1\n  \"D\", //   2\n  \"D#\", //  3\n  \"E\", //   4\n  \"F\", //   5\n  \"F#\", //  6\n  \"G\", //   7\n  \"G#\", //  8\n  \"A\", //   9\n  \"A#\", //  10\n  \"B\", //   11\n  \"B#\" //   12\n];\n\nexport const NOTES_COUNT = NOTES.length;\n\nexport const SCALES = [\n  {\n    name: \"Minor\",\n    pattern: [0, 2, 3, 5, 7, 8, 10]\n  },\n  {\n    name: \"Harmonic minor\",\n    pattern: [0, 2, 3, 5, 7, 8, 11]\n  },\n  {\n    name: \"Melodic minor\",\n    pattern: [0, 2, 4, 6, 8, 9, 11]\n  },\n  {\n    name: \"Major\",\n    pattern: [0, 2, 4, 5, 7, 9, 11]\n  },\n  {\n    name: \"Harmonic major\",\n    pattern: [0, 2, 4, 5, 7, 8, 11]\n  },\n  {\n    name: \"Melodic major\",\n    pattern: [0, 2, 4, 5, 7, 8, 10]\n  },\n  {\n    name: \"Diminished\",\n    pattern: [0, 2, 3, 5, 6, 8, 9, 11]\n  },\n  {\n    name: \"Minor arpeggio\",\n    pattern: [0, 3, 7]\n  },\n  {\n    name: \"Minor 7th arpeggio\",\n    pattern: [0, 3, 7, 10]\n  }\n];\n\nexport const TUNINGS = [\n  {\n    name: \"Standard E\",\n    pattern: [4, 11, 7, 2, 9, 4]\n  },\n  {\n    name: \"Drop D\",\n    pattern: [4, 11, 7, 2, 9, 2]\n  },\n  {\n    name: \"Drop C#\",\n    pattern: [3, 10, 6, 1, 8, 1]\n  },\n  {\n    name: \"Drop C\",\n    pattern: [2, 9, 5, 0, 7, 0]\n  }\n];\n\nexport const FRETS_COUNTS = [12, 18, 22, 24];\n\nexport const getLabelForNote = (noteIndex: number) => {\n  return NOTES[noteIndex];\n};\n\nexport const filterNotesByScale = (notes: number[], scalePattern: number[]) => {\n  return notes.map(note => (scalePattern.includes(note) ? note : null));\n};\n\nexport const getNotesForFrets = (startNote: number, fretsCount: number) => {\n  const notes = [];\n\n  for (let index = 0; index < fretsCount + 1; index++) {\n    notes.push((index + startNote) % (NOTES_COUNT - 1));\n  }\n\n  return notes;\n};\n","import React from \"react\";\n\nimport { getLabelForNote } from \"../../utils\";\n\nimport \"./styles.css\";\n\nexport const Bridge: React.FC<{\n  strings: (number | null)[][];\n  tuning: number[];\n}> = ({ strings, tuning }) => {\n  const bridgeNotes = strings.map(([note]) => note);\n\n  return (\n    <div className={\"bridge\"}>\n      {tuning.map((note, index) => (\n        <div className={\"bridge-note\"} key={index}>\n          <div\n            className={[\n              \"bridge-label\",\n              bridgeNotes.includes(note) ? \"active\" : \"\"\n            ].join(\" \")}\n          >\n            {getLabelForNote(note)}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { getLabelForNote } from \"../../utils\";\n\nimport \"./styles.css\";\n\nexport const Frets: React.FC<{ strings: (number | null)[][] }> = ({\n  strings\n}) => (\n  <>\n    {strings[0].slice(1).map((_, fretIndex) => (\n      <div className={\"fret\"} key={fretIndex}>\n        <div className={\"fret-index\"}>{fretIndex + 1}</div>\n        <div className={\"fret-notes\"}>\n          {strings.map((_, stringIndex) => {\n            const note = strings[stringIndex][fretIndex + 1];\n\n            return (\n              <div className={\"note\"} key={stringIndex}>\n                {note !== null ? (\n                  <div className={\"label\"}>{getLabelForNote(note)}</div>\n                ) : null}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    ))}\n  </>\n);\n","import React from \"react\";\n\nimport { Bridge } from \"../Bridge\";\nimport { Frets } from \"../Frets\";\n\nimport \"./styles.css\";\n\nexport const Neck: React.FC<{\n  strings: (number | null)[][];\n  tuning: number[];\n}> = ({ strings, tuning }) => (\n  <div className={\"frets\"}>\n    <Bridge strings={strings} tuning={tuning} />\n    <Frets strings={strings} />\n  </div>\n);\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport const Select: React.FC<{\n  label: string;\n  value: number;\n  items: { name: string | number; value: any }[];\n  onChange: (value: string) => void;\n}> = ({ value, onChange, items, label }) => (\n  <div className={\"select-container\"}>\n    <div className={\"select-label\"}>{label}</div>\n    <div className={\"select\"}>\n      <select value={value} onChange={event => onChange(event.target.value)}>\n        {items.map(({ name, value }, index) => (\n          <option value={value} key={index}>\n            {name}\n          </option>\n        ))}\n      </select>\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport const Credentials: React.FC = () => {\n  return (\n    <div className=\"credential-container\">\n      made for fun\n      <div className=\"credential-links\">\n        <a href=\"https://twitter.com/xeqlol\">twitter</a>\n        <a href=\"http://github.com/xeqlol\">github</a>\n        <a href=\"https://t.me/xeqlol\">telegram</a>\n        <a href=\"mailto:xeqlol@gmail.com\">email</a>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport createPersistedState from \"use-persisted-state\";\n\nimport { Neck } from \"../Neck\";\nimport { Select } from \"../Select\";\nimport { Credentials } from \"../Credentials\";\n\nimport {\n  NOTES_COUNT,\n  SCALES,\n  THEMES,\n  filterNotesByScale,\n  getNotesForFrets,\n  NOTES,\n  FRETS_COUNTS,\n  TUNINGS\n} from \"../../utils\";\n\nimport \"./App.css\";\n\nconst useScaleState = createPersistedState(\"scale\");\nconst useRootState = createPersistedState(\"root\");\nconst useFretsCountState = createPersistedState(\"frets-count\");\nconst useTuningCountState = createPersistedState(\"tuning\");\nconst useThemeState = createPersistedState(\"theme\");\n\nconst SCALES_SELECT_ITEMS = SCALES.map(({ name }, index) => ({\n  name,\n  value: index\n}));\nconst NOTES_SELECT_ITEMS = NOTES.map((note, index) => ({\n  name: note,\n  value: index\n}));\nconst FRETS_SELECT_ITEMS = FRETS_COUNTS.map(fretCount => ({\n  name: fretCount,\n  value: fretCount\n}));\nconst TUNINGS_SELECT_ITEMS = TUNINGS.map(({ name }, index) => ({\n  name,\n  value: index\n}));\nconst THEME_SELECT_ITEMS = [\n  ...THEMES.map((name, index) => ({\n    name,\n    value: index\n  })),\n  { name: \"random\", value: THEMES.length }\n];\n\nconst App = () => {\n  const [scale, setScale] = useScaleState(0);\n  const [root, setRoot] = useRootState(0);\n  const [fretsCount, setFretsCount] = useFretsCountState(22);\n  const [tuning, setTuning] = useTuningCountState(0);\n  const [theme, setTheme] = useThemeState(0);\n\n  const { pattern: scalePattern } = SCALES[scale];\n  const { pattern: tuningPatter } = TUNINGS[tuning];\n\n  const strings = tuningPatter.map(startNote =>\n    filterNotesByScale(\n      getNotesForFrets(startNote, fretsCount),\n      scalePattern.map(note => (note + root) % (NOTES_COUNT - 1))\n    )\n  );\n\n  useEffect(() => {\n    document.body.className =\n      theme === THEMES.length\n        ? THEMES[Math.floor(Math.random() * THEMES.length)]\n        : THEMES[theme];\n  });\n\n  return (\n    <>\n      <div className={\"controls\"}>\n        <Select\n          label={\"Scale\"}\n          items={SCALES_SELECT_ITEMS}\n          value={scale}\n          onChange={value => setScale(Number(value))}\n        />\n        <Select\n          label={\"Root note\"}\n          items={NOTES_SELECT_ITEMS}\n          value={root}\n          onChange={value => setRoot(Number(value))}\n        />\n        <Select\n          label={\"Frets count\"}\n          items={FRETS_SELECT_ITEMS}\n          value={fretsCount}\n          onChange={value => setFretsCount(Number(value))}\n        />\n        <Select\n          label={\"Tuning\"}\n          items={TUNINGS_SELECT_ITEMS}\n          value={tuning}\n          onChange={value => setTuning(Number(value))}\n        />\n        <Select\n          label={\"Color theme\"}\n          items={THEME_SELECT_ITEMS}\n          value={theme}\n          onChange={value => setTheme(Number(value))}\n        />\n      </div>\n\n      <Neck strings={strings} tuning={tuningPatter} />\n      <Credentials />\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}